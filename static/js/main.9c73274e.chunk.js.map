{"version":3,"sources":["js/data.js","js/utilities.js","js/functions.js","img/riverford-invert-transparent.png","App.js","reportWebVitals.js","index.js"],"names":["resultObjTemplate","alphaBet","alphaBetScore","theScore","theNumbers","getMaxIndex","_numArr","maxNum","Math","max","maxIndex","ii","length","initialRegex","str","toLowerCase","trim","replace","stripStrLetters","strippedEndingsStr","Array","from","stripStrCleanArray","strToArray","split","noReturnArr","push","MedianCalculate","cleanArr","totalLetterLength","wordLengths","i","_middlePos","sortedNewArray","sort","a","b","middlePos","Number","isInteger","_arr","middleLowerPos","middleUpperPos","middleLowerCount","medianEven","ceil","App","showFile","window","File","FileReader","FileList","Blob","scope","file","document","querySelector","files","reader","type","match","onload","event","_data","target","result","state","resultObj","LineCount","totalWordCount","toFixed","MeanCalculate","totalLettersLength","iii","highestScoreIndex","ModeCalculate","letterArr","MostCommonLetter","setState","console","log","readAsText","alert","name","className","Helmet","class","src","logo","alt","Container","Jumbotron","onChange","this","map","obj","index","title","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c73274e.chunk.js","sourcesContent":["// data.js\n// data templates, tables, variables, etc.\n\n// main state object\nexport const resultObjTemplate = [\n    {\n      \"title\": \"Word Count \",\n      \"result\": \"0\",\n    },\n    {\n      \"title\": \"Line Count \",\n      \"result\": \"0\",\n    },\n    {\n      \"title\": \"Mean - Average number of letters per word: \",\n      \"result\": \"0\",\n    },\n    {\n      \"title\": \"Mode - Most common number of letters per word: \",\n      \"result\": \"0\",\n    },\n    {\n      \"title\": \"Median - Number of letters per word in middle of set: \",\n      \"result\":\"0\",\n    },\n    {\n      \"title\": \"Most common letter \",\n      \"result\": \"0\",\n    },\n  ]\n\n// testing for letter - arrays same size?\nexport const alphaBet = [\n    \"a\",\"b\",\"c\",\"d\",\n    \"e\",\"f\",\"g\",\"h\",\n    \"i\",\"j\",\"k\",\"l\",\n    \"m\",\"n\",\"o\",\"p\",\n    \"q\",\"r\",\"s\",\"t\",\n    \"u\",\"v\",\"w\",\"x\",\n    \"y\",\"z\"\n];\n\n\nexport const alphaBetScore = [\n    0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    0,0,\n\n];\n// testing for word length - arrays same size?\nexport const theScore = [0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    0,0,0,0,\n    ];\n\nexport const theNumbers = [0,1,2,3,\n    4,5,6,7,\n    8,9,10,11,\n    12,13,14,15,\n    16,17,18,19,20                  \n    ];","// utilities.js\n\n// number tests\n\n// odd/even test\nexport function medianEven(_arr, _middlePos){\n    \n    var middleLowerPos = _middlePos;\n    var middleUpperPos = _middlePos + 1;\n\n    middleLowerPos = middleLowerPos -1;\n    middleUpperPos = middleUpperPos -1;\n\n    var middleLowerCount = _arr[middleLowerPos];\n    var middleUpperCount = _arr[middleUpperPos];\n\n    return (middleUpperCount + middleLowerCount) / 2;\n}\n\nexport function medianOdd(_arr, _middlePos){\n    var middlePosRoundUpAndNudgeDown = Math.ceil(_middlePos - 1);\n    return _arr[middlePosRoundUpAndNudgeDown];\n}\n\n//returns the index with the highest numnber in array..\nexport function getMaxIndex(_numArr){\n    var maxNum = Math.max(..._numArr);\n    var maxIndex = 0;\n\n    for(let ii = 0; ii < _numArr.length; ii++){\n        maxIndex = _numArr[ii] === maxNum ? ii : maxIndex;\n    }\n    return maxIndex;\n\n}\n\n//string tests\n\n//returns string with basic cleaning done.\nexport function initialRegex(str){\n    var lowercaseStr = str.toLowerCase();\n    var trimStr = lowercaseStr.trim();\n    var trimStrNoSpecials = trimStr.replace(/[.,#!$%&;:{}=\\-_`~()]/g,\"\");//?\n    return trimStrNoSpecials ;\n}\n\n//returns array of all letters\nexport function  stripStrLetters(str) {\n\n    var trimStrNoSpecials = initialRegex(str);\n    var strippedEndingsStr = trimStrNoSpecials.replace(/\\n|\\r|\\s/g, \"\");\n\n    var letterArr = Array.from(strippedEndingsStr);\n\n    return letterArr;\n}\n\n// returns array of all words \n// NEED TO TEST ON WINDOWS!\nexport function stripStrCleanArray(str){\n\n    var trimStrNoSpecials = initialRegex(str);\n\n    var strippedStr = trimStrNoSpecials.replace(/\\n|\\r/g, \" \");\n    var strToArray = strippedStr.split(\" \");\n    var noReturnArr = [];\n\n    for(let ii =0; ii < strToArray.length; ii++){\n        strToArray[ii] !== \"\" ? noReturnArr.push(strToArray[ii]) : noReturnArr.push();\n    }\n\n    return noReturnArr;\n}","\nimport {\n    alphaBet,\n    alphaBetScore,\n    theNumbers,\n    theScore,\n    } from './data.js';\n\nimport {getMaxIndex,\n        stripStrLetters,\n        stripStrCleanArray,\n        medianEven,\n        medianOdd,\n        } from './utilities.js';\n\nexport function WordCount(str) { \n    const cleanArr = stripStrCleanArray(str);\n    return cleanArr.length;\n  }\n\nexport function LineCount(str) {\n    return str.split(\"\\n\").length;//? pc/mac line endings?\n}\n\nexport function MeanCalculate(str) {\n\n    const cleanArr = stripStrCleanArray(str);\n    const totalWordCount = cleanArr.length;\n    const letterCount = stripStrLetters(str);\n    const wordMean = (letterCount.length/totalWordCount).toFixed(1);\n\n    return wordMean;\n\n  }\n\n  export function ModeCalculate(str) {\n    \n    var strToArray = str.split(\" \");\n    var totalLettersLength = strToArray.length;\n\n    var wordLengths = [];\n    for(let i=0;i<totalLettersLength;i++){\n        wordLengths.push(strToArray[i].length);\n    }\n\n    for(let i=0; i < wordLengths.length; i++){\n      for (let iii = 0; iii < (theNumbers.length - 1); iii++){\n            theScore[iii] = (theNumbers[iii] === wordLengths[i]) ? theScore[iii] + 1 : theScore[iii] ;\n        }\n    }\n\n    var highestScoreIndex = getMaxIndex(theScore);\n   \n    return theNumbers[highestScoreIndex];\n                    \n  }\n\n  export function MedianCalculate(str){\n    const cleanArr = stripStrCleanArray(str);\n    const totalLetterLength = cleanArr.length;\n    const wordLengths = [];\n\n    for(let i=0;i<totalLetterLength;i++){\n        wordLengths.push(cleanArr[i].length);\n    }\n\n    const sortedNewArray = wordLengths.sort(function(a,b) { return a - b; });\n    const middlePos = sortedNewArray.length/2;\n\n    const median = Number.isInteger(middlePos) ? medianEven(sortedNewArray, middlePos) : medianOdd(sortedNewArray, middlePos);\n  \n   return median;\n\n  }\n\n  export function MostCommonLetter(str) {\n        \n        const letterArr = stripStrLetters(str);\n\n        for (let i=0; i < letterArr.length; i++){\n\n            for (let ii=0; ii < alphaBet.length; ii++){\n                alphaBetScore[ii] = (alphaBet[ii] === letterArr[i]) ? alphaBetScore[ii]+1 : alphaBetScore[ii];               \n            }\n        }\n\n        return alphaBet[getMaxIndex(alphaBetScore)];\n\n\n  }","export default __webpack_public_path__ + \"static/media/riverford-invert-transparent.de1c7b0f.png\";","import React, { Component } from 'react';\nimport {Helmet} from \"react-helmet\";\n\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport {resultObjTemplate,\n  } from './js/data.js';\n\nimport { WordCount, \n         LineCount,\n         MeanCalculate,\n         ModeCalculate,\n         MedianCalculate,\n         MostCommonLetter,\n       } from './js/functions.js';\nimport './App.css';\n\nimport logo from './img/riverford-invert-transparent.png';\n\n  class App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      name: \"Text Analysis\",\n      resultObj: resultObjTemplate,\n    };\n  }\n\n\n  showFile = () => {\n    if (window.File \n        && window.FileReader \n        && window.FileList \n        && window.Blob) {\n\n         const scope = this;   \n\n         var file = document.querySelector('input[type=file]').files[0];\n         var reader = new FileReader()\n\n         var textFile = /text.*/;\n\n         if (file.type.match(textFile)) {\n            \n            reader.onload = function (event) {\n              \n              const _data = event.target.result;\n\n              scope.state.resultObj[0].result = WordCount(_data);\n              scope.state.resultObj[1].result = LineCount(_data);\n              scope.state.resultObj[2].result = MeanCalculate(_data);\n              scope.state.resultObj[3].result = ModeCalculate(_data);\n              scope.state.resultObj[4].result = MedianCalculate(_data);\n              scope.state.resultObj[5].result = MostCommonLetter(_data);\n\n              scope.setState({\n                ...scope.state,\n              })\n\n            }\n         } else {\n            console.log(\"Error - Please make sure it is a .txt file\");\n         }\n         reader.readAsText(file);\n\n   } else {\n      alert(\"This browser does not support HTML5!\");\n   }\n  }  \n\n  render() {\n\n    return (\n        <div className=\"App\">\n          <Helmet>\n                <title>Text Analysis</title>\n            </Helmet>\n          <nav class=\"navbar-header navbar-dark bg-dark text-white\">\n            <div className=\"text-left\">\n              <img\n                  className=\"App-logo mr-3 ml-3\"\n                  src={logo}\n                  alt=\"Riverford Logo\"\n                /> \n                Text file statistical Analysis v1.0\n              </div>\n          </nav>\n          <Container className=\"p-3 text-left\">\n            <Jumbotron\n              className=\"App-header\"\n            >\n              {/* */}\n              <div>\n                <h1 className=\"font-weight-light\">\n                  Text file Statistical Analysis\n                </h1>\n                <p className=\"font-weight-light mb-3\">This app will calculate and display statistics about text files submitted to it.\n                <br/>\n                See 'readme' for more information\n                </p>\n                <p className=\"font-weight-normal text-left text-danger\" >Please choose a .txt file:</p>\n              </div>\n              <div\n                className=\"mb-3 text-left\"\n              >\n                  <input \n                    type=\"file\" \n                    onChange={this.showFile} \n                    />\n              </div>\n              <div>\n              <ul className=\"list-group list-group-flush\">\n                  {this.state.resultObj.map((obj,index) => \n                          <li \n                              key={index}\n                              className=\"list-group-item \"\n                          >\n                              <div\n                                className=\"d-flex justify-content-between\"\n                              >\n                                  <div\n                                    className=\"smlTxt\"\n                                  >{obj.title}</div>\n                                  <div className=\"text-danger smlTxt\">{obj.result}</div>\n                              </div>\n                          </li>\n                      )\n                  }\n              </ul>\n              </div>\n              <div>\n                <p className=\"mt-3 small\">\n                  &copy; N.S. Walters 27|11|20\n                </p>\n              </div>\n            </Jumbotron>\n          </Container>\n        </div>\n\n      \n    );\n  }\n    \n  }\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}